{"version":3,"sources":["components/EmpCard/index.js","components/Wrapper/index.js","components/Logo/index.js","components/Sort/index.js","components/SearchForm/index.js","components/Logo/EmpDirLogo.png","App.js","reportWebVitals.js","index.js"],"names":["EmpCard","image","name","position","email","className","alt","src","process","Wrapper","props","children","Logo","logo","Sort","SearchName","handleInputChange","id","type","placeholder","aria-label","value","this","onChange","e","App","state","employees","LogoImage","filteredEmployees","sortEmp","employeesB","sort","a","b","nameA","toLowerCase","nameB","console","log","setState","employeesA","searchEmployeeByName","target","newEmployeeList","filter","employee","includes","length","Container","fluid","style","borderBottomColor","borderBottomWidth","marginBottom","Row","Col","md","Button","variant","onClick","SearchForm","map","emp","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1036ec93.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction EmpCard({ image, name, position, email }) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={name} src={process.env.PUBLIC_URL + image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {name}\n          </li>\n          <li>\n            <strong>Position:</strong> {position}\n          </li>\n          <li>\n            <strong>Email:</strong> {email}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default EmpCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n// import logo from \"./EmpDirLogo.png\";\r\n\r\nfunction Logo(props) {\r\n  return <img src={props.logo} alt={props.logo} />;\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Sort(props) {\r\n  return (\r\n    <div className=\"sort\">\r\n      <span>{props.children}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sort;\r\n","import React from \"react\";\r\nimport \"./SearchName.css\";\r\n\r\nfunction SearchName({ handleInputChange }) {\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <div className=\"input-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"SearchForm\">\r\n            Search\r\n          </span>\r\n        </div>\r\n        <input\r\n          className=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"name\"\r\n          aria-label=\"Search\"\r\n          value={this}\r\n          onChange={(e) => handleInputChange(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchName;\r\n","export default __webpack_public_path__ + \"static/media/EmpDirLogo.f522caa0.png\";","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n// styling imports\nimport EmpCard from \"./components/EmpCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Logo from \"./components/Logo\";\nimport Sort from \"./components/Sort\";\nimport SearchForm from \"./components/SearchForm\";\nimport LogoImage from \"./components/Logo/EmpDirLogo.png\";\n// import employees...\nimport employees from \"./employees.json\";\n\nclass App extends Component {\n  state = {\n    employees,\n    logo: LogoImage,\n    filteredEmployees: employees,\n  };\n\n  // Sort Employees in reverse order\n\n  sortEmp = () => {\n    if (this.state.employees[0].name === \"Bin Chun\") {\n      const employeesB = this.state.employees.sort(function (a, b) {\n        var nameA = a.name.toLowerCase();\n        var nameB = b.name.toLowerCase();\n        if (nameA > nameB) {\n          return -1;\n        }\n        if (nameA < nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      console.log(\"employees B: \", employeesB);\n      this.setState({ ...this.state, employees: employeesB });\n    } else if (this.state.employees[0].name !== \"Bin Chun\") {\n      const employeesA = this.state.employees.sort(function (a, b) {\n        var nameA = a.name.toLowerCase();\n        var nameB = b.name.toLowerCase();\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n      console.log(\"employees A: \", employeesA);\n      this.setState({ ...this.state, employees: employeesA });\n    }\n  };\n\n  handleInputChange = (e) => {\n    const searchEmployeeByName = e.target.value;\n    const { employees } = this.state;\n\n    let newEmployeeList = employees.filter((employee) =>\n      employee.name.toLowerCase().includes(searchEmployeeByName.toLowerCase())\n    );\n\n    if (searchEmployeeByName.length !== 0) {\n      this.setState({ filteredEmployees: newEmployeeList });\n    } else {\n      this.setState({ filteredEmployees: employees });\n    }\n  };\n\n  render() {\n    const { filteredEmployees, logo } = this.state;\n\n    return (\n      <Wrapper>\n        <Container\n          fluid=\"md\"\n          style={{\n            borderBottomColor: \"black\",\n            borderBottomWidth: 1,\n            marginBottom: 25,\n          }}\n        >\n          <Row className=\"justify-content-md-center\">\n            <Logo logo={logo} fluid />\n          </Row>\n        </Container>\n        <Container>\n          <Row>\n            <Col md={6}>\n              <Sort>\n                <p>Change Sorted Order</p>\n                <Button variant=\"info\" onClick={this.sortEmp}>\n                  Arrange Employees\n                </Button>\n              </Sort>\n            </Col>\n            <Col md={6}>\n              <p id=\"search-name\">Search by Name</p>\n              <SearchForm handleInputChange={this.handleInputChange} />\n            </Col>\n          </Row>\n        </Container>\n        <Container>\n          <Row md={12}>\n            {filteredEmployees.map((emp) => (\n              <EmpCard\n                id={emp.id}\n                key={emp.id}\n                name={emp.name}\n                image={emp.image}\n                position={emp.position}\n                email={emp.email}\n              />\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}